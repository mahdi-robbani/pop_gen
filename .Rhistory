install.packages("HardyWeinberg")
HW.test.Adults
# Exercise 2
library("HardyWeinberg")
Seedlings <- c(AA = 79, AB = 43, BB = 21)
HW.test.Seedlings <- HWChisq(Seedlings, cc = 0, verbose = TRUE)
HW.test.Seedlings
Adults <- c(AA = 70, AB = 60, BB = 13)
HW.test.Adults <- HWChisq(Adults, cc = 0, verbose = TRUE)
HW.test.Adults
HW.test.Seedlings
HW.test.Adults
HW.test.Adults$pval
HW.test.Seedlings$pval
AFR <- c("CC" = 617, "CG" = 41, "GG" = 3)
HW.test.AFR <- HWChisq(AFR, cc = 0, verbose = TRUE)
HW.test.AFR
EUR <- c("CC" = 4, "CG" = 54, "GG" = 445)
HW.test.EUR <- HWChisq(EUR, cc = 0, verbose = TRUE)
HW.test.EUR
knitr::opts_chunk$set(echo = TRUE)
nodes = c(1,2,3,4,5) # make the list and call it nodes
nodes # print the list
nodecount = length(nodes) # save the number of nodes in the variable nodecount
tocoalesce = sample(1:nodecount, size=2) # sample 2 different nodes in node list
nodes[tocoalesce[1]] # print the first node sampled
nodes[tocoalesce[2]] # print the second node sampled
nodes = c(1,2,3,4,5) # make the list and call it nodes
nodes # print the list
nodecount = length(nodes) # save the number of nodes in the variable nodecount
tocoalesce = sample(1:nodecount, size=2) # sample 2 different nodes in node list
nodes[tocoalesce[1]] # print the first node sampled
nodes[tocoalesce[2]] # print the second node sampled
coalescencerate = nodecount*(nodecount-1)/2 # calculate the coalescent rate
coalescencetime = rexp(1, rate=coalescencerate) # sample from exponential w. that rate
coalescencetime
nodes = c(1,2,3,4,5) # make the list and call it nodes
nodes # print the list
nodecount = length(nodes) # save the number of nodes in the variable nodecount
tocoalesce = sample(1:nodecount, size=2) # sample 2 different nodes in node list
nodes[tocoalesce[1]] # print the first node sampled
nodes[tocoalesce[2]] # print the second node sampled
coalescencerate = nodecount*(nodecount-1)/2 # calculate the coalescent rate
coalescencetime = rexp(1, rate=coalescencerate) # sample from exponential w. that rate
coalescencetime
nodes <- nodes[-tocoalesce] # remove the two nodes that coalesced
nodes <- c(nodes,2*5-length(nodes)-1) # add the new node
nodes # print the new list
for (i in c(1:10)){
print("New Tree")
yourtree <-simtree(5) # simulate tree with 5 nodes
ct<-read.tree(text=yourtree);plot(ct,cex=1.5);add.scale.bar(y=1.2,x=0.2,cex = 2,col = "red",lcol="red",lwd=3)
print(" ")
}
install.packages("ape")
source("simulatecoalescencetrees.R")
#Run script
par (mfrow=c(2,5))
for (i in c(1:10)){
print("New Tree")
yourtree <-simtree(5) # simulate tree with 5 nodes
ct<-read.tree(text=yourtree);plot(ct,cex=1.5);add.scale.bar(y=1.2,x=0.2,cex = 2,col = "red",lcol="red",lwd=3)
print(" ")
for (i in c(1:10)){
print("New Tree")
yourtree <-simtree(5) # simulate tree with 5 nodes
ct<-read.tree(text=yourtree);plot(ct,cex=1.5);add.scale.bar(y=1.2,x=0.2,cex = 2,col = "red",lcol="red",lwd=3)
print(" ")
}
#load script
source("simulatecoalescencetrees.R")
#Run script
par (mfrow=c(2,5))
for (i in c(1:10)){
print("New Tree")
yourtree <-simtree(5) # simulate tree with 5 nodes
ct<-read.tree(text=yourtree);plot(ct,cex=1.5);add.scale.bar(y=1.2,x=0.2,cex = 2,col = "red",lcol="red",lwd=3)
print(" ")
}
#load script
source("simulatecoalescencetrees.R")
#Run script
par (mfrow=c(2,5))
for (i in c(1:10)){
print("New Tree")
yourtree <-simtree(5) # simulate tree with 5 nodes
ct<-read.tree(text=yourtree);plot(ct,cex=1.5);add.scale.bar(y=1.2,x=0.2,cex = 2,col = "red",lcol="red",lwd=3)
print(" ")
}
}
#Example of one cycle
nodes = c(1,2,3,4,5) # make the list and call it nodes
nodes # print the list
nodecount = length(nodes) # save the number of nodes in the variable nodecount
tocoalesce = sample(1:nodecount, size=2) # sample 2 different nodes in node list
nodes[tocoalesce[1]] # print the first node sampled
nodes[tocoalesce[2]] # print the second node sampled
coalescencerate = nodecount*(nodecount-1)/2 # calculate the coalescent rate
coalescencetime = rexp(1, rate=coalescencerate) # sample from exponential w. that rate
coalescencetime
nodes <- nodes[-tocoalesce] # remove the two nodes that coalesced
nodes <- c(nodes,2*5-length(nodes)-1) # add the new node
nodes # print the new list
#load script
source("simulatecoalescencetrees.R")
#Run script
par (mfrow=c(2,5))
for (i in c(1:10)){
print("New Tree")
yourtree <-simtree(5) # simulate tree with 5 nodes
ct<-read.tree(text=yourtree);plot(ct,cex=1.5);add.scale.bar(y=1.2,x=0.2,cex = 2,col = "red",lcol="red",lwd=3)
print(" ")
}
install.packages("ape")
#install.packages("ape")
#Example of one cycle
nodes = c(1,2,3,4,5) # make the list and call it nodes
nodes # print the list
nodecount = length(nodes) # save the number of nodes in the variable nodecount
tocoalesce = sample(1:nodecount, size=2) # sample 2 different nodes in node list
nodes[tocoalesce[1]] # print the first node sampled
nodes[tocoalesce[2]] # print the second node sampled
coalescencerate = nodecount*(nodecount-1)/2 # calculate the coalescent rate
coalescencetime = rexp(1, rate=coalescencerate) # sample from exponential w. that rate
coalescencetime
nodes <- nodes[-tocoalesce] # remove the two nodes that coalesced
nodes <- c(nodes,2*5-length(nodes)-1) # add the new node
nodes # print the new list
#load script
source("simulatecoalescencetrees.R")
#Run script
par (mfrow=c(2,5))
for (i in c(1:10)){
print("New Tree")
yourtree <-simtree(5) # simulate tree with 5 nodes
ct<-read.tree(text=yourtree);plot(ct,cex=1.5);add.scale.bar(y=1.2,x=0.2,cex = 2,col = "red",lcol="red",lwd=3)
print(" ")
}
#install.packages("ape")
#Example of one cycle
nodes = c(1,2,3,4,5) # make the list and call it nodes
nodes # print the list
nodecount = length(nodes) # save the number of nodes in the variable nodecount
tocoalesce = sample(1:nodecount, size=2) # sample 2 different nodes in node list
nodes[tocoalesce[1]] # print the first node sampled
nodes[tocoalesce[2]] # print the second node sampled
coalescencerate = nodecount*(nodecount-1)/2 # calculate the coalescent rate
coalescencetime = rexp(1, rate=coalescencerate) # sample from exponential w. that rate
coalescencetime
nodes <- nodes[-tocoalesce] # remove the two nodes that coalesced
nodes <- c(nodes,2*5-length(nodes)-1) # add the new node
nodes # print the new list
#load script
source("simulatecoalescencetrees.R")
#Run script
library(ape)
par (mfrow=c(2,5))
for (i in c(1:10)){
print("New Tree")
yourtree <-simtree(5) # simulate tree with 5 nodes
ct<-read.tree(text=yourtree);plot(ct,cex=1.5);add.scale.bar(y=1.2,x=0.2,cex = 2,col = "red",lcol="red",lwd=3)
print(" ")
}
